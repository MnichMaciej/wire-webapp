pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                echo "TAG: ${TAG}"
                sh "git checkout tags/${TAG}"
            }
        }
        stage('Build'){
            steps{
                dir('/var/jenkins_home/workspace/LAB07/MM400503/Docker'){
                    sh "docker-compose -f ./docker-compose.yml build --build-arg TAG=${TAG} build-agent"
                }
            }
            post{
                success{
                    echo "Built successfully!"
                }
                failure{
                    echo "Build failed!"
                }
            }
        }
        stage('Test'){
            steps{
                dir('/var/jenkins_home/workspace/LAB07/MM400503/Docker'){
                    sh "docker-compose -f ./docker-compose.yml build --build-arg TAG=${TAG} test-agent"
                    sh 'docker-compose  up --force-recreate -d test-agent'
                    sh '''
                        TEST_OUTPUT=`docker-compose logs`
                        TEST_OUTPUT=`echo $TEST_OUTPUT | tr '|' '\n' | grep 'Tests: ' | sed -e 's/^[[:space:]]*//'`
                        PASSED=$(echo $TEST_OUTPUT | awk -F ' ' '{print $3}')
                        TOTAL=$(echo $TEST_OUTPUT | awk -F ' ' '{print $5}')
                        if [ $PASSED == $TOTAL ]; then echo 100% passed; else echo Failure. Rate  $(awk -v var1=$PASSED -v var2=$TOTAL 'BEGIN { print  ( var1 / var2 * 100 ) }'); return 1;fi
                    '''
                }
            }
            post{
                success{
                    echo "Test successfully!"
                }
                failure{
                    echo "Test failed!"
                }
            }
        }
        stage('Deploy'){
            steps{
                dir('/var/jenkins_home/workspace/LAB07/MM400503/Docker'){
                    sh "docker login"
                    sh "docker-compose push"
                    sh """
                        curl --unix-socket /var/run/docker.sock \
                            -X DELETE \
                            http:/v1.38/containers/wirewebapp?force=1
                        """
                    sh """
                        curl --unix-socket /var/run/docker.sock \
                            -H "Content-Type: application/json" \
                            -d @create-container.json \
                            -X POST \
                            http:/v1.38/containers/create?name=wirewebapp
                        """
                    sh "curl --unix-socket /var/run/docker.sock -X POST http:/v1.24/containers/wirewebapp/start"
                }
            }
        }
        post{
            always {
                dir('/var/jenkins_home/workspace/LAB07/MM400503/Docker'){
                    sh 'docker-compose rm -f'
                    sh 'docker image rm -f docker_test-agent'
                    sh "docker image rm -f mnichmaciej/cicd:${TAG}"
                }
            }
            success {
                echo 'successfully deploy'
            }
            failure{
                echo 'deploy failed'
            }
        }
    }

}
